/***********
 * Buttons *
 ***********/
.button {

  $_button_transition: all 200ms $ease-out-quad;

  border: none;
  border-radius: 3px;
  border: none;
  padding: 4px 7px;
  transition: $_button_transition;
  @include button(normal);
  &.flat {
    @include button(undecorated);
    // to avoid adiacent buttons borders clashing when transitioning, the transition on the normal state is set
    // to none, while it's added back in the hover state, so the button decoration will fade in on hover, but
    // it won't fade out when the pointer leave the button allocation area. To make the transition more evident
    // in this case the duration is increased.
    transition: none;
    &:checked { color: $fg_color;}
    &:hover {
      transition: $_button_transition;
      transition-duration: 500ms;
      &:active { transition: $_button_transition; }
      &:checked { color: $selected_fg_color;}
    }
    &:backdrop { border-color: transparent; }
  }
  &:hover {
    @include button(hover,$selected_bg_color,$selected_fg_color);
    -gtk-image-effect: highlight;
  }
  &:active, &:checked {
    @include button(active,darken($selected_bg_color,5%),$selected_fg_color);
    transition-duration: 50ms;
  }
  &:backdrop, &.flat:backdrop {
    @include button(backdrop);
    -gtk-image-effect: none;
    &:active, &:checked {
      @include button(backdrop-active);
    }
    &:insensitive {
      @include button(backdrop-insensitive);
    }
    &:insensitive:active, &:insensitive:checked {
      @include button(backdrop-insensitive-active);
    }
  }
  &.flat:backdrop, &.flat:insensitive, &.flat:backdrop:insensitive {
    @include button(undecorated);
  }
  &:insensitive {
    @include button(insensitive);
    &:active, &:checked {
      @include button(insensitive-active);
    }
  }
  // big standalone buttons like in Documents pager
  &.osd {
    &.image-button { padding: 13px; }
    color: $osd_fg_color;
    border-radius: 5px;
    outline-color: transparentize($osd_fg_color, 0.7);  //FIXME: define a color var?
    @include button(osd);
    border: none;
    box-shadow: none;
    &:hover {
      @include button(osd-hover);
      border: none;
      box-shadow: none;
    }
    &:active, &:checked {
      @include button(osd-active);
      border: none;
      box-shadow: none;
    }
    &:insensitive, &:backdrop:insensitive {
      @include button(osd-insensitive);
      border: none;
    }
    &:backdrop {
      @include button(osd-backdrop);
      border: none;
    }
  }
  //overlay / OSD style
  .osd & {
    @include button(osd);
    // there's a problem with sass which prevents it to extend the linked
    // placeholder as expected, it should just be "@extend %linked;", the
    // placeholder is basically replicated here
    //
    // Workaround START
    border-radius: 0;
    border-left-style: none;

    &:dir(rtl) {
      border-radius: 0;
      border-right-style: none;
      border-left-style: solid
    }
    &:first-child {
      border-radius: 3px 0 0 3px;
      border-left-style: solid;
    }
    &:last-child {
      border-radius: 0 3px 3px 0;
      &:dir(rtl) { border-right-style: solid; }
    }
    &:only-child {
      border-radius: 3px;
      border-style: solid;
    }
    // Workaround END
    &:hover {
      @include button(osd-hover);
      @extend %linked;
    }
    &:active, &:checked, &:backdrop:active, &:backdrop:checked {
      @include button(osd-active);
      @extend %linked;
    }
    &:insensitive, &:backdrop:insensitive {
      @include button(osd-insensitive);
      @extend %linked;
    }
    &:backdrop {
      @include button(osd-backdrop);
      @extend %linked;
    }
    &.flat {
      @include button(undecorated);
      box-shadow: none; //FIXME respect no edge on the button mixin
      text-shadow: 0 1px black;
      icon-shadow: 0 1px black;
      &:hover {
        @include button(osd-hover);
        background-clip: padding-box;
        border-color: transparent;
        box-shadow: none;
      }
      &:insensitive {
        @include button(osd-insensitive);
        background-image: none;
        border-color: transparent;
        box-shadow: none;
      }
      &:backdrop { @include button(undecorated); }
      &:active, &:checked {
        @include button(osd-active);
        background-clip: padding-box;
        border-color: transparent;
        box-shadow: none;
      }
    }
  }

  // Suggested and Destructive Action buttons
  @each $b_type, $b_color in (suggested-action, $selected_bg_color),
                             (destructive-action, $destructive_color) {
    &.#{$b_type} {
      @include button(normal, $b_color, white);
      &.flat {
        @include button(undecorated);
        color: $b_color; //FIXME: does it work on the dark variant?
      }
      &:hover { @include button(hover, $b_color, white); }
      &:active, &:checked { @include button(active, $b_color, white); }
      &:backdrop, &.flat:backdrop {
        @include button(backdrop, $b_color, white);
        &:active, &:checked {
          @include button(backdrop-active, $b_color, white);
        }
        &:insensitive {
          @include button(backdrop-insensitive);
          &:active, &:checked {
            @include button(backdrop-insensitive-active, $b_color, white);
          }
        }
      }
      &.flat:backdrop, &.flat:insensitive, &.flat:backdrop:insensitive {
        @include button(undecorated);
        color: transparentize($b_color, 0.2);
      }
      &:insensitive {
        @include button(insensitive);
        &:active, &:checked {
          @include button(insensitive-active, $b_color, white);
        }
      }
      .osd & {
        @include button(osd, $b_color);
        @extend %linked;
        &:hover {
          @include button(osd-hover, $b_color);
          @extend %linked;
        }
        &:active, &:checked, &:backdrop:active, &:backdrop:checked {
          @include button(osd-active, $b_color);
          @extend %linked;
        }
        &:insensitive, &:backdrop:insensitive {
          @include button(osd-insensitive, $b_color);
          @extend %linked;
        }
        &:backdrop {
          @include button(osd-backdrop, $b_color);
          @extend %linked;
        }
      }
    }
  }

  &.image-button { padding: 8px; }

  &.text-button {
    padding-left: 16px;
    padding-right: 16px;
  }

  &.text-button.image-button {
    // those buttons needs uneven horizontal padding, we want the icon side
    // to have the image-button padding, while the text side the text-button
    // one, so we're adding the missing padding to the label depending on
    // its position inside the button
    padding: 5px 8px 6px; // same as .button
    .label:first-child { padding-left: 8px; }
    .label:last-child { padding-right: 8px; }
  }

  .stack-switcher > & {
    // to position the needs attention dot, padding is added to the button
    // child, a label needs just lateral padding while an icon needs vertical
    // padding added too.

    outline-offset: -3px; // needs to be set or it gets overriden by GtkRadioButton outline-offset

    > .label {
      padding-left: 6px;  // label padding
      padding-right: 6px; //
    }
    > GtkImage {
      padding-left: 6px;   // image padding
      padding-right: 6px;  //
      padding-top: 3px;    //
      padding-bottom: 3px; //
    }
    &.text-button {
      padding: 5px 10px 6px; // needed or it will get overridden
    }
    &.image-button {
      // we want image buttons to have a 1:1 aspect ratio, so compensation
      // of the padding added to the GtkImage is needed
      padding: 5px 2px;
    }
  }

  //inline-toolbar buttons
  .inline-toolbar &, .inline-toolbar &:backdrop {
    border-radius: 2px;
    border-width: 1px;
    @extend %linked;
  }

  .primary-toolbar & { icon-shadow: none; } // tango icons don't need shadows

  .linked > &,
  .linked > &:hover,
  .linked > &:active,
  .linked > &:checked,
  .linked > &:backdrop { @extend %linked; }

  .linked.vertical > &,
  .linked.vertical > &:hover,
  .linked.vertical > &:active,
  .linked.vertical > &:checked,
  .linked.vertical > &:backdrop { @extend %linked_vertical; }
}

// all the following is for the +|- buttons on inline toolbars, that way
// should really be deprecated...
.inline-toolbar GtkToolButton > .button { // redefining the button look is
                                          // needed since those are flat...
  @include button(normal);
  &:hover { @include button(hover); }
  &:active,
  &:checked{ @include button(active); }
  &:insensitive { @include button(insensitive); }
  &:insensitive:active,
  &:insensitive:checked { @include button(insensitive-active); }
  &:backdrop { @include button(backdrop); };
  &:backdrop:active,
  &:backdrop:checked { @include button(backdrop-active); }
  &:backdrop:insensitive { @include button(backdrop-insensitive); }
  &:backdrop:insensitive:active,
  &:backdrop:insensitive:checked {
    @include button(backdrop-insensitive-active); }
}

// More inline toolbar buttons
.inline-toolbar.toolbar GtkToolButton,
.inline-toolbar.toolbar GtkToolButton:backdrop {
  & > .button.flat { @extend %linked_middle; }
  &:first-child > .button.flat { @extend %linked:first-child; }
  &:last-child > .button.flat { @extend %linked:last-child; }
  &:only-child > .button.flat { @extend %linked:only-child; }
}

%linked_middle {
  border: 1px solid $borders_color;
  border-radius: 0;
  border-right-style: none;
  box-shadow: inset 0px 1px 0px 0px $top_hilight;
}

%linked {
  @extend %linked_middle;
  &:first-child {
    border-top-left-radius: 3px;
    border-bottom-left-radius: 3px;
  }
  &:last-child {
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    border-right-style: solid;
  }
  &:only-child {
    border-radius: 3px;
    border-style: solid;
  }
}

%linked_vertical_middle {
  border-style: solid solid none solid;
  border-radius: 0;
}

%linked_vertical{
  @extend %linked_vertical_middle;
  &:first-child {
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
  }
  &:last-child {
    border-bottom-left-radius: 3px;
    border-bottom-right-radius: 3px;
    border-style: solid;
  }
  &:only-child {
    border-radius: 3px;
    border-style: solid;
  }
}

%undecorated_button {
  border-color: transparent;
  background-color: transparent;
  background-image: none;
  box-shadow: inset 0 1px transparentize(white,1),
              0 1px transparentize(white, 1);
  text-shadow: none;
  icon-shadow: none;
}

/* menu buttons */
.menuitem.button.flat {
  @extend %undecorated_button;
  outline-offset: -1px;
  &:hover { background-color: mix($fg_color, $bg_color, 10%); }
  &:selected { @extend %selected_items; }
  &:backdrop, &:backdrop:hover {
    @extend %undecorated_button;
  }
}


GtkColorButton.button {
  padding: 5px; // Uniform padding on the GtkColorButton

  GtkColorSwatch:first-child:last-child { // :first-child:last-child for a specificity bump, it gets overridden by the
                                          // colorpicker style, otherwise
    border-radius: 0;
    box-shadow: inset 0 1px 1px transparentize(black, 0.9),
                _widget_edge();
    &:insensitive,
    &:backdrop { box-shadow: none; }
  }
}

.notebook, .list, .view, .popover {
  .button {
    box-shadow: inset 0px 0px 0px 1px $borders_color;
    &:backdrop {
      box-shadow: inset 0px 0px 0px 1px $borders_color;
    }
  }
  .linked > .button {
    box-shadow: none;
  }
}
